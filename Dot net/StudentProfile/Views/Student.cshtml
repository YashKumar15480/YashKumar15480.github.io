@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions
@using DMS.Feature.Content.Constants
@model DMS.Feature.Content.Models.StudentProfile.StudentProfileModel
@if (Model != null)
{
<div>
    <div @Html.Sxa().Component("student-profile-details", Model.Attributes)>
        <div class="component-content">
              
            <h2 class="student-profile">
                @(Html.Sxa().IsEdit ? Html.Sxa().Field(StudentProfileConstants.StudentNameField, Model.DataSourceItem) : (!string.IsNullOrEmpty(Model.StudentName) ? Html.Raw(Model.StudentName) : null))
            </h2>

            @if (Html.Sxa().IsEdit)
            {
                @Html.Sxa().Field(StudentProfileConstants.StudentImageDesktopField, Model.DataSourceItem, new { @class = "img-desktop d-none d-md-block" })
            }
            else if (Model.StudentImageDesktop != null && !Html.Sxa().IsEdit)
            {
                <img src="@Model.StudentImageDesktop.ImageUrl" alt="@Model.StudentImageDesktop.ImageAlt" title="@Model.StudentImageDesktop.ImageAlt" class="img-desktop d-none d-md-block" />
            }

            @if (Html.Sxa().IsEdit)
            {
                @Html.Sxa().Field(StudentProfileConstants.StudentImageMobileField, Model.DataSourceItem, new { @class = "img-mobile d-block d-md-none" })
            }
            else if (Model.StudentImageMobile != null && !Html.Sxa().IsEdit)
            {
                <img src="@Model.StudentImageMobile.ImageUrl" alt="@Model.StudentImageMobile.ImageAlt" title="@Model.StudentImageMobile.ImageAlt" class="img-mobile d-block d-md-none" />
            }

            @if (Html.Sxa().IsEdit)
            {
                <div class="linkedin-link">
                    @if (Model.LinkedInLink != null)
                    {
                    <em><a href="@Model.LinkedInLink.Url" rel="noopener" title="LinkedIn Profile" target="@Model.LinkedInLink.Target">Visit LinkedIn Profile</a></em>
                    }
                </div>
            }
            else if (Model.LinkedInLink != null && !Html.Sxa().IsEdit)
            {
                <div class="linkedin-link">
                    <em><a href="@Model.LinkedInLink.Url" rel="noopener" title="LinkedIn Profile" target="@Model.LinkedInLink.Target">Visit LinkedIn Profile</a></em>
                </div>
            }

            @if (Html.Sxa().IsEdit || (Model.Subjects != null && Model.Subjects.Any() && !Html.Sxa().IsEdit))
            {
                <h4><b>Proficiency:</b></h4>
                <ul class="subjects-field">
                    @foreach (var subject in Model.Subjects)
                    {
                        <li>@subject</li>
                    }
                </ul>
            }

            <h4 class="profile-field">
                @(Html.Sxa().IsEdit? Html.Sxa().Field(StudentProfileConstants.StudentProfileField, Model.DataSourceItem) : (!string.IsNullOrEmpty(Model.StudentProfile) ? Html.Raw(Model.StudentProfile) : null))
            </h4>


        </div>
    </div>
</div>
}